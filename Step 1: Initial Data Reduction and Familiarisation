#Load librarys 

library(tm)
library(tidyverse)
library(tidytext)
library(dplyr)


#STEP 0: Filter out non-bloodclot Tweets

reduced_df #This is dataframe that only contains Tweets with hashtags.

filter1 <- c("blood|clot|J&J|johnson|astrazeneca|oxford")

bloodclot_filter1 <- reduced_df[grep(paste0(filter1, collapse = "|"), reduced_df$text),]

#STEP 1: Create a frequency table of hashtags  

hashtag_summary<-bloodclot_filter1 [c(5)]

hashtag_nospace<-hashtag_summary
hashtag_nospace$hashtags<-gsub("\\s", ", ", hashtag_nospace$hashtags)

hashtag_table<-table(unlist(strsplit(as.character(hashtag_nospace$hashtags), ',')))
hashtag_table<-as.data.frame.table(hashtag_table) %>%
  arrange((desc(Freq)))

#STEP 2: Tidytext was used to tokenise all the words as a dataframe r/t create a corpus

tidy_corpus<- bloodclot_filter1 %>%
  select(user_screen_name,text) %>%
  unnest_tokens("word", text)
word_counts <- head(tidy_corpus)

#STEP 3: Stop words and redundant Twitter terms were removed.

data("stop_words")

top_words<-tidy_corpus %>%
  anti_join(stop_words) %>%
   filter(!(word=="https"| 
            word=="rt"| 
            word=="t.co"|
            word=="amp")) %>%
     count(word) %>%
  arrange(desc(n)) #word were then examined in the the "top_words" df

#STEP 4: Term Frequency:inverse document Frequency (tf-idf)

tidy_corpus_tfidf <- bloodclot_filter1 %>%
  select(user_screen_name, text) %>%
   unnest_tokens("word", text) %>%
    anti_join(stop_words) %>%
     count(word, user_screen_name) %>%
      bind_tf_idf(word, user_screen_name, n)
  
top_tfidf <- tidy_corpus_tfidf %>%
  arrange(desc(tf_idf))

#Step 5 remove emojis, non-latin & ASCII characters before exporting the data set to Cortext

bloodclot_filter1$text <- sapply(bloodclot_filter1$text,function(row) iconv(row, "latin1", "ASCII", sub=""))

bloodclot_filter2<-bloodclot_filter1 %>%
  bloodclot_filter2$hashtags <- sapply(bloodclot_filter2$hashtags,function(row) iconv(row, "latin1", "ASCII", sub=""))

#STEP 6: Export CSV for analysis in Cortext topic modelling software

write.csv(bloodclot_filter2, file = "bloodclot_controversy.csv")



